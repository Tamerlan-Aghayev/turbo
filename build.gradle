import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
import com.bmuschko.gradle.docker.tasks.image.DockerPushImage
import com.bmuschko.gradle.docker.tasks.image.Dockerfile
plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.3'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'com.bmuschko.docker-remote-api' version "$dockerVersion" apply true
}

group = 'com.company'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
}
task dockerFile(type: Dockerfile, dependsOn: assemble) {
	destFile.set(project.file('Dockerfile'))
	from "alpine:$alpineVersion"
	runCommand 'apk add --no-cache openjdk17'
	runCommand 'apk add --no-cache tzdata'
	copyFile "build/libs/${project.name}-${project.version}.jar", '/app/'
	workingDir '/app/'
	entryPoint 'java'
	defaultCommand '-jar', "/app/${project.name}-${project.version}.jar"
}

task dockerBuild(type: DockerBuildImage, dependsOn: dockerFile) {
	inputDir.set(file("$projectDir/."))
	doLast {
		println("creatig image: $dockerRepoUrl/${project.name}:$version")
	}
	images.add("$dockerRepoUrl/${project.name}:$version")
}

task dockerPush(type: DockerPushImage, dependsOn: dockerBuild) {
	images.add("$dockerRepoUrl/${project.name}:$version")

	registryCredentials.setUsername("$dockerHubUsername")
	registryCredentials.setPassword("$dockerHubPassword")
	registryCredentials.setEmail("$dockerHubEmail")
}
task runDockerCompose(type: Exec, dependsOn: dockerPush) {

	commandLine 'docker-compose', 'up', '-d'
}

tasks.named('test') {
	useJUnitPlatform()
}
